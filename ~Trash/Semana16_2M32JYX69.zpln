{
  "paragraphs": [
    {
      "text": "%md\n# Uso de Chi-cuadrado para correlación de 2 variables Nominales o Categóricas (String)\n\nProcedimiento para calcular la relación (correlación) de 2 variables nominales o categóricas (para informáticos tipo String) utilizando Apache Spark, se utilizan como ejemplo las columnas **movilización** y **género**, buscando determinar si existe alguna relación entre el género de los detenidos y el tipo de movilización que usaron. Tal y como se presentó en clases, el método que se usará es del chi-cuadrado.\n\nEn este ejercicio se hace uso de una librería de Spark, razón por la cual no se usará tablas de contingencia, que generalmente se usan para realizar el cálculo manual, si está interesado sobre este tema pue revisar el siguiente enlace [Ejercicios de Chi Cuadrado](https://www.udocz.com/apuntes/139344/sesion1-ejercicios-resueltos-de-chi-cuadrado).\n\nAdicionalmente al código se muestra una explicación de algunas de las sentencias.",
      "user": "anonymous",
      "dateUpdated": "2025-07-29 23:22:02.127",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch1\u003eUso de Chi-cuadrado para correlación de 2 variables Nominales o Categóricas (String)\u003c/h1\u003e\n\u003cp\u003eProcedimiento para calcular la relación (correlación) de 2 variables nominales o categóricas (para informáticos tipo String) utilizando Apache Spark, se utilizan como ejemplo las columnas \u003cstrong\u003emovilización\u003c/strong\u003e y \u003cstrong\u003egénero\u003c/strong\u003e, buscando determinar si existe alguna relación entre el género de los detenidos y el tipo de movilización que usaron. Tal y como se presentó en clases, el método que se usará es del chi-cuadrado.\u003c/p\u003e\n\u003cp\u003eEn este ejercicio se hace uso de una librería de Spark, razón por la cual no se usará tablas de contingencia, que generalmente se usan para realizar el cálculo manual, si está interesado sobre este tema pue revisar el siguiente enlace \u003ca href\u003d\"https://www.udocz.com/apuntes/139344/sesion1-ejercicios-resueltos-de-chi-cuadrado\"\u003eEjercicios de Chi Cuadrado\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eAdicionalmente al código se muestra una explicación de algunas de las sentencias.\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1753831322127_1038266683",
      "id": "paragraph_1721327675402_756290513",
      "dateCreated": "2025-07-29 23:22:02.127",
      "status": "READY"
    },
    {
      "text": "%md\n## Carga de datos\n\nEl primer paso es cargar los datos, en este caso se utiliza la información limpia que ha sido almacenada en formato parquet.",
      "user": "anonymous",
      "dateUpdated": "2025-07-29 23:22:02.127",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eCarga de datos\u003c/h2\u003e\n\u003cp\u003eEl primer paso es cargar los datos, en este caso se utiliza la información limpia que ha sido almacenada en formato parquet.\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1753831322127_2101729857",
      "id": "paragraph_1721407467437_1809793796",
      "dateCreated": "2025-07-29 23:22:02.127",
      "status": "READY"
    },
    {
      "text": "val dfDetenidos \u003d spark\n    .read\n    .parquet(\"/Users/oliversaraguro/Documents/Ciclo4/ProyIntegrador/semana14.parquet\")\n    //.parquet(\"/Users/jorgaf/Documents/Clases/Abril-Agosto2024/Presencial/ProAva/proyectointegrador/dataprojectclean3.parquet\")",
      "user": "anonymous",
      "dateUpdated": "2025-07-29 23:22:02.127",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mdfDetenidos\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m \u003d [nombre_zona: string, nombre_subzona: string ... 37 more fields]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1753831322127_1993992431",
      "id": "paragraph_1721148563016_1948803263",
      "dateCreated": "2025-07-29 23:22:02.127",
      "status": "READY"
    },
    {
      "text": "%md\n## Selección de columnas, agrupamiento y conteo\n\nSe debe seleccionar las columnas a evaluar, en este caso: género y movilización. Chi cuadrado se basa en la frecuencia de los datos, razón por la cual, se cuenta (uso de count) la ocurrencia de cada par de valores nominales. Además se reemplazan los valores nulos (*null*) por 0",
      "user": "anonymous",
      "dateUpdated": "2025-07-29 23:22:02.127",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eSelección de columnas, agrupamiento y conteo\u003c/h2\u003e\n\u003cp\u003eSe debe seleccionar las columnas a evaluar, en este caso: género y movilización. Chi cuadrado se basa en la frecuencia de los datos, razón por la cual, se cuenta (uso de count) la ocurrencia de cada par de valores nominales. Además se reemplazan los valores nulos (\u003cem\u003enull\u003c/em\u003e) por 0\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1753831322127_606718626",
      "id": "paragraph_1721407529785_1497609340",
      "dateCreated": "2025-07-29 23:22:02.127",
      "status": "READY"
    },
    {
      "text": "val dfChiSquare \u003d     dfDetenidos\n        .where($\"edad\".isNotNull \n            \u0026\u0026 $\"edad\" \u003e\u003d 18 \n            \u0026\u0026 $\"movilizacion\" \u003d!\u003d \"SIN DATO\"\n            \u0026\u0026 $\"movilizacion\" \u003d!\u003d \"NO APLICA\" \n            \u0026\u0026 $\"genero\" \u003d!\u003d \"NO APLICA\")\n        .groupBy(\"movilizacion\", \"genero\")\n//        .pivot(\"genero\")\n        .count\n        .na\n        .fill(0)\n        .orderBy(\"movilizacion\")",
      "user": "anonymous",
      "dateUpdated": "2025-07-29 23:22:02.127",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mdfChiSquare\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.Dataset[org.apache.spark.sql.Row]\u001b[0m \u003d [movilizacion: string, genero: string ... 1 more field]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1753831322127_860045712",
      "id": "paragraph_1721148565723_2003535366",
      "dateCreated": "2025-07-29 23:22:02.127",
      "status": "READY"
    },
    {
      "text": "z.show(dfChiSquare)",
      "user": "anonymous",
      "dateUpdated": "2025-07-29 23:22:02.127",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "movilizacion": "string",
                      "genero": "string",
                      "count": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "movilizacion\tgenero\tcount\nA PIE\tNO BINARIO\t1\nA PIE\tTRANS MASCULINO\t26\nA PIE\tFEMENINO\t5014\nA PIE\tTRANSEXUAL\t23\nA PIE\tTRANS FEMENINA\t16\nA PIE\tMASCULINO\t35922\nACÉMILAS\tFEMENINO\t12\nACÉMILAS\tMASCULINO\t59\nAUTOMOVIL\tMASCULINO\t8599\nAUTOMOVIL\tFEMENINO\t633\nAUTOMOVIL\tTRANS FEMENINA\t1\nAUTOMOVIL\tTRANS MASCULINO\t8\nAUTOMOVIL\tNO BINARIO\t1\nBICICLETA\tFEMENINO\t2\nBICICLETA\tMASCULINO\t221\nBOTE\tMASCULINO\t12\nBUS\tMASCULINO\t636\nBUS\tFEMENINO\t90\nBUS\tTRANS FEMENINA\t1\nCAMIONETA\tMASCULINO\t2178\nCAMIONETA\tFEMENINO\t103\nCAMIONETA\tTRANS MASCULINO\t4\nCUADRON\tMASCULINO\t4\nLANCHA\tMASCULINO\t126\nLANCHA\tFEMENINO\t2\nMOTOCICLETA\tMASCULINO\t7188\nMOTOCICLETA\tNO BINARIO\t1\nMOTOCICLETA\tTRANS MASCULINO\t6\nMOTOCICLETA\tFEMENINO\t223\nTAXI\tTRANS MASCULINO\t1\nTAXI\tMASCULINO\t560\nTAXI\tFEMENINO\t39\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1753831322127_381164339",
      "id": "paragraph_1721148616325_1943091855",
      "dateCreated": "2025-07-29 23:22:02.127",
      "status": "READY"
    },
    {
      "text": "%md\nPara realizar los cálculos es necesario realizar los siguientes *import*, la mayoría de clases pertenecen al paquete relacionado con Machine Learning (ml). \n\nEl primer *import* (*StringIndexer*), se encargada de crear un índice para una cadena de texto, mientras que el segundo se emplea para la creación de vectores (la combinación de textos se representa como un arreglo), el tercer se usa para recorrer cada fila de un *DataFrame* y el último *import* se importa la clase *ChiSquareTest* que es la encargada de realizar el cálculo.",
      "user": "anonymous",
      "dateUpdated": "2025-07-29 23:22:02.127",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003ePara realizar los cálculos es necesario realizar los siguientes \u003cem\u003eimport\u003c/em\u003e, la mayoría de clases pertenecen al paquete relacionado con Machine Learning (ml).\u003c/p\u003e\n\u003cp\u003eEl primer \u003cem\u003eimport\u003c/em\u003e (\u003cem\u003eStringIndexer\u003c/em\u003e), se encargada de crear un índice para una cadena de texto, mientras que el segundo se emplea para la creación de vectores (la combinación de textos se representa como un arreglo), el tercer se usa para recorrer cada fila de un \u003cem\u003eDataFrame\u003c/em\u003e y el último \u003cem\u003eimport\u003c/em\u003e se importa la clase \u003cem\u003eChiSquareTest\u003c/em\u003e que es la encargada de realizar el cálculo.\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1753831322127_1152555260",
      "id": "paragraph_1721407831668_201978882",
      "dateCreated": "2025-07-29 23:22:02.127",
      "status": "READY"
    },
    {
      "text": "import org.apache.spark.ml.feature.StringIndexer\nimport org.apache.spark.ml.linalg.{Vector, Vectors}\nimport org.apache.spark.sql.Row\nimport org.apache.spark.ml.stat.ChiSquareTest",
      "user": "anonymous",
      "dateUpdated": "2025-07-29 23:22:02.128",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "import org.apache.spark.ml.feature.StringIndexer\nimport org.apache.spark.ml.linalg.{Vector, Vectors}\nimport org.apache.spark.sql.Row\nimport org.apache.spark.ml.stat.ChiSquareTest\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1753831322128_287886907",
      "id": "paragraph_1721148742418_320152768",
      "dateCreated": "2025-07-29 23:22:02.128",
      "status": "READY"
    },
    {
      "text": "%md\n## Configuración de índices\n\nSe configura la clase *StringIndexer* para que más adelante cree un índice por cada valor único que se encuentra en las columnas movilización y género, como se está trabajando en un DataFrame, los índices deben considerar los valores que se encuentra en el mismo.",
      "user": "anonymous",
      "dateUpdated": "2025-07-29 23:22:02.128",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eConfiguración de índices\u003c/h2\u003e\n\u003cp\u003eSe configura la clase \u003cem\u003eStringIndexer\u003c/em\u003e para que más adelante cree un índice por cada valor único que se encuentra en las columnas movilización y género, como se está trabajando en un DataFrame, los índices deben considerar los valores que se encuentra en el mismo.\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1753831322128_886845559",
      "id": "paragraph_1721409345268_381471192",
      "dateCreated": "2025-07-29 23:22:02.128",
      "status": "READY"
    },
    {
      "text": "val moviliIndexer \u003d new StringIndexer()\n    .setInputCol(\"movilizacion\") // Definir la columna que deseemos indexar\n    .setOutputCol(\"movilizacion_index\") // Crea una columna\n    .fit(dfChiSquare) // Especificamos el DataFrame\n    \nval generoIndexer \u003d new StringIndexer()\n    .setInputCol(\"genero\")\n    .setOutputCol(\"genero_index\")\n    .fit(dfChiSquare)",
      "user": "anonymous",
      "dateUpdated": "2025-07-29 23:22:02.128",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mmoviliIndexer\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.ml.feature.StringIndexerModel\u001b[0m \u003d StringIndexerModel: uid\u003dstrIdx_0f7d38a22a32, handleInvalid\u003derror\n\u001b[1m\u001b[34mgeneroIndexer\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.ml.feature.StringIndexerModel\u001b[0m \u003d StringIndexerModel: uid\u003dstrIdx_9bb36332b5e4, handleInvalid\u003derror\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1753831322128_1771482754",
      "id": "paragraph_1721148637160_2021668344",
      "dateCreated": "2025-07-29 23:22:02.128",
      "status": "READY"
    },
    {
      "text": "%md\n## Creación de columnas de índices\n\nCon los índices anteriores, es momento de crear un *DataSet* **(una clase hija de *DataFrame*)** que se deriva del DataFrame que contiene las columnas a relacionar (*dfChiSquare*), pero, al que se agregarán 2 columnas que representan los índices numéricos de cada uno de los textos que se encuentran en las columnas movilización y género. Observe cómo se usa la configuración que se hizo anteriormente en los valores *moviliIndexer* y *generoIndexer*.\n\nObserve el resultado de la sentencia *show* aplicada sobre el *DataSet* *indexedData* y verá las columnas agregadas (*movilizacion_index* y *genero_index*).",
      "user": "anonymous",
      "dateUpdated": "2025-07-29 23:22:02.128",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eCreación de columnas de índices\u003c/h2\u003e\n\u003cp\u003eCon los índices anteriores, es momento de crear un \u003cem\u003eDataSet\u003c/em\u003e \u003cstrong\u003e(una clase hija de \u003cem\u003eDataFrame\u003c/em\u003e)\u003c/strong\u003e que se deriva del DataFrame que contiene las columnas a relacionar (\u003cem\u003edfChiSquare\u003c/em\u003e), pero, al que se agregarán 2 columnas que representan los índices numéricos de cada uno de los textos que se encuentran en las columnas movilización y género. Observe cómo se usa la configuración que se hizo anteriormente en los valores \u003cem\u003emoviliIndexer\u003c/em\u003e y \u003cem\u003egeneroIndexer\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eObserve el resultado de la sentencia \u003cem\u003eshow\u003c/em\u003e aplicada sobre el \u003cem\u003eDataSet\u003c/em\u003e \u003cem\u003eindexedData\u003c/em\u003e y verá las columnas agregadas (\u003cem\u003emovilizacion_index\u003c/em\u003e y \u003cem\u003egenero_index\u003c/em\u003e).\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1753831322128_1672936870",
      "id": "paragraph_1721409835713_1565928780",
      "dateCreated": "2025-07-29 23:22:02.128",
      "status": "READY"
    },
    {
      "text": "// Dataset es una clase hija de un DataFrama\nval indexedData \u003d moviliIndexer // \n    .transform(dfChiSquare) // DataFrame de Datos, devuelve la columna que esta definia en moviliIndexer\n    .transform(generoIndexer.transform(_)) // aplica otra transformación utilizando generoIndexer, que es otro indexador, generoIndexer.transform(_) significa que \n                                        // estamos aplicando generoIndexer al resultado de la transformación previa (moviliIndexer.transform(dfChiSquare)).\n",
      "user": "anonymous",
      "dateUpdated": "2025-07-29 23:22:02.128",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mindexedData\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.Dataset[org.apache.spark.sql.Row]\u001b[0m \u003d [movilizacion: string, genero: string ... 3 more fields]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1753831322128_417231414",
      "id": "paragraph_1721148869207_1665474544",
      "dateCreated": "2025-07-29 23:22:02.128",
      "status": "READY"
    },
    {
      "text": "indexedData.show",
      "user": "anonymous",
      "dateUpdated": "2025-07-29 23:22:02.128",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+------------+---------------+-----+------------------+------------+\n|movilizacion|         genero|count|movilizacion_index|genero_index|\n+------------+---------------+-----+------------------+------------+\n|       A PIE|     NO BINARIO|    1|               0.0|         3.0|\n|       A PIE|TRANS MASCULINO|   26|               0.0|         2.0|\n|       A PIE|       FEMENINO| 5014|               0.0|         1.0|\n|       A PIE|     TRANSEXUAL|   23|               0.0|         5.0|\n|       A PIE| TRANS FEMENINA|   16|               0.0|         4.0|\n|       A PIE|      MASCULINO|35922|               0.0|         0.0|\n|    ACÉMILAS|       FEMENINO|   12|               6.0|         1.0|\n|    ACÉMILAS|      MASCULINO|   59|               6.0|         0.0|\n|   AUTOMOVIL|      MASCULINO| 8599|               1.0|         0.0|\n|   AUTOMOVIL|       FEMENINO|  633|               1.0|         1.0|\n|   AUTOMOVIL| TRANS FEMENINA|    1|               1.0|         4.0|\n|   AUTOMOVIL|TRANS MASCULINO|    8|               1.0|         2.0|\n|   AUTOMOVIL|     NO BINARIO|    1|               1.0|         3.0|\n|   BICICLETA|       FEMENINO|    2|               7.0|         1.0|\n|   BICICLETA|      MASCULINO|  221|               7.0|         0.0|\n|        BOTE|      MASCULINO|   12|               9.0|         0.0|\n|         BUS|      MASCULINO|  636|               3.0|         0.0|\n|         BUS|       FEMENINO|   90|               3.0|         1.0|\n|         BUS| TRANS FEMENINA|    1|               3.0|         4.0|\n|   CAMIONETA|      MASCULINO| 2178|               4.0|         0.0|\n+------------+---------------+-----+------------------+------------+\nonly showing top 20 rows\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1753831322128_1032271269",
      "id": "paragraph_1721149237261_2015821606",
      "dateCreated": "2025-07-29 23:22:02.128",
      "status": "READY"
    },
    {
      "text": "%md\n## Vectorización del texto\n\nUna vez que se han generado los índices, el siguiente paso es la representación como vectores de la información de las columnas *movilizacion_index* y *genero_index* que pasan a llamarse features o características, mientras que los valores de la columna *count*, pasan a llamarse *label* **(etiquetas)**. Todo lo anterior se hace mapeando las filas del *DataSet*, que son objetos del tipo *Row* que dentro almacena los valores de cada columna que se representan con las variables: \n* m -\u003e Movilizacion\n* g -\u003e Genero\n* c -\u003e Conteo\n* mi -\u003e Movilizacion Index\n* gi -\u003e Genero Index \n\nEl mapeo se hace a tuplas de dos en donde el primer elemento es un vector denso (una estructura de datos donde se almacenan explícitamente todos los valores, incluso si algunos de ellos son ceros) y el segundo es el contador, pero, convertido a un tipo real.\n\nFinalmente, se convierten los datos en *DataFrame*. Fíjese en los datos que muestra el método *show*.",
      "user": "anonymous",
      "dateUpdated": "2025-07-29 23:22:02.128",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eVectorización del texto\u003c/h2\u003e\n\u003cp\u003eUna vez que se han generado los índices, el siguiente paso es la representación como vectores de la información de las columnas \u003cem\u003emovilizacion_index\u003c/em\u003e y \u003cem\u003egenero_index\u003c/em\u003e que pasan a llamarse features o características, mientras que los valores de la columna \u003cem\u003ecount\u003c/em\u003e, pasan a llamarse \u003cem\u003elabel\u003c/em\u003e \u003cstrong\u003e(etiquetas)\u003c/strong\u003e. Todo lo anterior se hace mapeando las filas del \u003cem\u003eDataSet\u003c/em\u003e, que son objetos del tipo \u003cem\u003eRow\u003c/em\u003e que dentro almacena los valores de cada columna que se representan con las variables:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003em -\u0026gt; Movilizacion\u003c/li\u003e\n\u003cli\u003eg -\u0026gt; Genero\u003c/li\u003e\n\u003cli\u003ec -\u0026gt; Conteo\u003c/li\u003e\n\u003cli\u003emi -\u0026gt; Movilizacion Index\u003c/li\u003e\n\u003cli\u003egi -\u0026gt; Genero Index\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eEl mapeo se hace a tuplas de dos en donde el primer elemento es un vector denso (una estructura de datos donde se almacenan explícitamente todos los valores, incluso si algunos de ellos son ceros) y el segundo es el contador, pero, convertido a un tipo real.\u003c/p\u003e\n\u003cp\u003eFinalmente, se convierten los datos en \u003cem\u003eDataFrame\u003c/em\u003e. Fíjese en los datos que muestra el método \u003cem\u003eshow\u003c/em\u003e.\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1753831322128_1517911271",
      "id": "paragraph_1721415297102_999235643",
      "dateCreated": "2025-07-29 23:22:02.128",
      "status": "READY"
    },
    {
      "text": "val vectorData \u003d indexedData.map { case Row(m, g, c: Long, mi:Double, gi:Double)  \u003d\u003e\n  (Vectors.dense(mi, gi), c.toDouble) // Tranformamos en una tupla y convertimos \u0027c\u0027 a Double\n}.toDF(\"features\", \"label\") // Convertimos a data Frame con la primera columna features y la segunda label",
      "user": "anonymous",
      "dateUpdated": "2025-07-29 23:22:02.128",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mvectorData\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m \u003d [features: vector, label: double]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1753831322128_950221762",
      "id": "paragraph_1721148960425_61127243",
      "dateCreated": "2025-07-29 23:22:02.128",
      "status": "READY"
    },
    {
      "text": "vectorData.show",
      "user": "anonymous",
      "dateUpdated": "2025-07-29 23:22:02.128",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+---------+-------+\n| features|  label|\n+---------+-------+\n|[0.0,3.0]|    1.0|\n|[0.0,2.0]|   26.0|\n|[0.0,1.0]| 5014.0|\n|[0.0,5.0]|   23.0|\n|[0.0,4.0]|   16.0|\n|[0.0,0.0]|35922.0|\n|[6.0,1.0]|   12.0|\n|[6.0,0.0]|   59.0|\n|[1.0,0.0]| 8599.0|\n|[1.0,1.0]|  633.0|\n|[1.0,4.0]|    1.0|\n|[1.0,2.0]|    8.0|\n|[1.0,3.0]|    1.0|\n|[7.0,1.0]|    2.0|\n|[7.0,0.0]|  221.0|\n|[9.0,0.0]|   12.0|\n|[3.0,0.0]|  636.0|\n|[3.0,1.0]|   90.0|\n|[3.0,4.0]|    1.0|\n|[4.0,0.0]| 2178.0|\n+---------+-------+\nonly showing top 20 rows\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1753831322128_1358302015",
      "id": "paragraph_1721150295943_2107259543",
      "dateCreated": "2025-07-29 23:22:02.128",
      "status": "READY"
    },
    {
      "text": "%md\n## Cálculo de Chi-cuadrado\n\nYa se han generado los datos que son necesarios para usar el método *test* de la clase *ChiSquareTest* que devuelve un objeto del tipo *DataFrame* con un única fila, que se obtiene con el método *head*, y 3 columnas que se explican a continuación:",
      "user": "anonymous",
      "dateUpdated": "2025-07-29 23:22:02.128",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eCálculo de Chi-cuadrado\u003c/h2\u003e\n\u003cp\u003eYa se han generado los datos que son necesarios para usar el método \u003cem\u003etest\u003c/em\u003e de la clase \u003cem\u003eChiSquareTest\u003c/em\u003e que devuelve un objeto del tipo \u003cem\u003eDataFrame\u003c/em\u003e con un única fila, que se obtiene con el método \u003cem\u003ehead\u003c/em\u003e, y 3 columnas que se explican a continuación:\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1753831322128_157488060",
      "id": "paragraph_1721416126191_326187785",
      "dateCreated": "2025-07-29 23:22:02.128",
      "status": "READY"
    },
    {
      "text": "val chiSquareTestResult \u003d ChiSquareTest // Funcion que calcula Chi-Cuadrado \n    .test(vectorData, \"features\", \"label\") // Le damos el vector y las columnas \n    .head // Devuelve la cabecera",
      "user": "anonymous",
      "dateUpdated": "2025-07-29 23:22:02.128",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mchiSquareTestResult\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.Row\u001b[0m \u003d [[0.6488948467646778,0.44189316166698434],WrappedArray(230, 115),[221.24444444444444,116.55757575757573]]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1753831322128_1769991066",
      "id": "paragraph_1721150137144_1284878224",
      "dateCreated": "2025-07-29 23:22:02.128",
      "status": "READY"
    },
    {
      "text": "println(s\"P-values: ${chiSquareTestResult(0)}\") \nprintln(s\"Degrees of freedom: ${chiSquareTestResult(1)}\")\nprintln(s\"Statistics: ${chiSquareTestResult(2)}\")",
      "user": "anonymous",
      "dateUpdated": "2025-07-29 23:22:02.128",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "P-values: [0.6488948467646778,0.44189316166698434]\nDegrees of freedom: WrappedArray(230, 115)\nStatistics: [221.24444444444444,116.55757575757573]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1753831322128_723304617",
      "id": "paragraph_1721149128467_1906592606",
      "dateCreated": "2025-07-29 23:22:02.128",
      "status": "READY"
    },
    {
      "text": "%md\n*chiSquareTestResult(0)*: \nDevuelve los p-values indican la probabilidad de que las observaciones se hayan producido bajo la hipótesis nula de indepencia (es decir, que no hay relación entre las variables). Estos valores se interpretan así: \n\n- **p-value alto (mayor que 0.05)** significa que no hay suficiente evidencia para rechar la hipótesis nula. Esto sugiere que las variables son independientes. \n- **p-value bajo(menor o igual que 0.05)**: Hay suficiente evidencia para rechazar la hipótesis nula. Esto sugiere que hay una relación significativa entre las variables.\n\n*chiSquareTestResult(1)*: \nGrados de libertad (Degrees of Freedom). Los grados de libertad indican el número de valores que pueden variar libremente en el cálculo de una estadística. Estos valores se utilizan para determinar la distribución chi-cuadrado apropiada con la que se compararán las estadísticas chi-cuadrado.\n\n*chiSquareTestResult(2)*: \nEstadísticas. Las estadísticas chi-cuadrado representan la suma de las diferencias al cuadrado entre las frecuencias observadas y esperadas, normalizadas por las frecuencias esperadas. Se interpretan en el contexto de los grados de libertad para determinar la significancia.",
      "user": "anonymous",
      "dateUpdated": "2025-07-29 23:22:02.128",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003e\u003cem\u003echiSquareTestResult(0)\u003c/em\u003e:\u003cbr /\u003e\nDevuelve los p-values indican la probabilidad de que las observaciones se hayan producido bajo la hipótesis nula de indepencia (es decir, que no hay relación entre las variables). Estos valores se interpretan así:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003ep-value alto (mayor que 0.05)\u003c/strong\u003e significa que no hay suficiente evidencia para rechar la hipótesis nula. Esto sugiere que las variables son independientes.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ep-value bajo(menor o igual que 0.05)\u003c/strong\u003e: Hay suficiente evidencia para rechazar la hipótesis nula. Esto sugiere que hay una relación significativa entre las variables.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cem\u003echiSquareTestResult(1)\u003c/em\u003e:\u003cbr /\u003e\nGrados de libertad (Degrees of Freedom). Los grados de libertad indican el número de valores que pueden variar libremente en el cálculo de una estadística. Estos valores se utilizan para determinar la distribución chi-cuadrado apropiada con la que se compararán las estadísticas chi-cuadrado.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003echiSquareTestResult(2)\u003c/em\u003e:\u003cbr /\u003e\nEstadísticas. Las estadísticas chi-cuadrado representan la suma de las diferencias al cuadrado entre las frecuencias observadas y esperadas, normalizadas por las frecuencias esperadas. Se interpretan en el contexto de los grados de libertad para determinar la significancia.\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1753831322128_750720279",
      "id": "paragraph_1721149720544_517552130",
      "dateCreated": "2025-07-29 23:22:02.128",
      "status": "READY"
    },
    {
      "text": "%md\nRelacionando con los datos las estadísticas se resumen así:\n\n- P-values: Ambos p-valores son mayores que 0.05, lo que sugiere que no hay una relación significativa entre las variables \"movilización\" y \"género\".\n- Grados de libertad (Degrees of Freedom): Los grados de libertad son altos (230 y 115), lo que refleja la gran cantidad de combinaciones de categorías en tus datos.\n- Estadísticas (Statistics): Las estadísticas chi-cuadrado (221.244 y 116.558) indican las desviaciones de las frecuencias observadas respecto a las esperadas, pero estos valores no son suficientes para rechazar la hipótesis de independencia dadas los p-valores altos.\n\nNo hay suficiente evidencia estadística para concluir que existe una asociación significativa entre las variables \"movilización\" y \"género\" en el conjunto de datos. Esto sugiere que, con el nivel de confianza habitual del 95%, estas variables son independientes.",
      "user": "anonymous",
      "dateUpdated": "2025-07-29 23:22:02.128",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eRelacionando con los datos las estadísticas se resumen así:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eP-values: Ambos p-valores son mayores que 0.05, lo que sugiere que no hay una relación significativa entre las variables \u0026ldquo;movilización\u0026rdquo; y \u0026ldquo;género\u0026rdquo;.\u003c/li\u003e\n\u003cli\u003eGrados de libertad (Degrees of Freedom): Los grados de libertad son altos (230 y 115), lo que refleja la gran cantidad de combinaciones de categorías en tus datos.\u003c/li\u003e\n\u003cli\u003eEstadísticas (Statistics): Las estadísticas chi-cuadrado (221.244 y 116.558) indican las desviaciones de las frecuencias observadas respecto a las esperadas, pero estos valores no son suficientes para rechazar la hipótesis de independencia dadas los p-valores altos.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eNo hay suficiente evidencia estadística para concluir que existe una asociación significativa entre las variables \u0026ldquo;movilización\u0026rdquo; y \u0026ldquo;género\u0026rdquo; en el conjunto de datos. Esto sugiere que, con el nivel de confianza habitual del 95%, estas variables son independientes.\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1753831322128_1851051862",
      "id": "paragraph_1721416803557_1748370193",
      "dateCreated": "2025-07-29 23:22:02.128",
      "status": "READY"
    },
    {
      "text": "%md\n## Disclaimer:\n\nParte de la explicación fue generador por IA.\n\nOpenAI (2023). ChatGPT 4o (Mar 14 version) [Large language model]. https://chat.openai.com",
      "user": "anonymous",
      "dateUpdated": "2025-07-29 23:22:02.128",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eDisclaimer:\u003c/h2\u003e\n\u003cp\u003eParte de la explicación fue generador por IA.\u003c/p\u003e\n\u003cp\u003eOpenAI (2023). ChatGPT 4o (Mar 14 version) [Large language model]. \u003ca href\u003d\"https://chat.openai.com\"\u003ehttps://chat.openai.com\u003c/a\u003e\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1753831322128_1699188375",
      "id": "paragraph_1721417172247_285553958",
      "dateCreated": "2025-07-29 23:22:02.128",
      "status": "READY"
    },
    {
      "text": "%md\n# Parte adicional",
      "user": "anonymous",
      "dateUpdated": "2025-07-29 23:22:02.129",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch1\u003eParte adicional\u003c/h1\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1753831322128_557743553",
      "id": "paragraph_1724965100771_50144735",
      "dateCreated": "2025-07-29 23:22:02.129",
      "status": "READY"
    },
    {
      "text": "%md\n# outlier",
      "user": "anonymous",
      "dateUpdated": "2025-07-29 23:22:02.129",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch1\u003eoutlier\u003c/h1\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1753831322129_732390151",
      "id": "paragraph_1721741186268_1982767232",
      "dateCreated": "2025-07-29 23:22:02.129",
      "status": "READY"
    },
    {
      "text": "%md\n### Causas\n* Errores en la entrada de datos \n* Errores de medicion(errores del instrumento)\n* Errores experimentales(eztraccion de datos o errores de planificacion)\n* Intencional \n* Errores de procesamiento",
      "user": "anonymous",
      "dateUpdated": "2025-07-29 23:22:02.129",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eCausas\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eErrores en la entrada de datos\u003c/li\u003e\n\u003cli\u003eErrores de medicion(errores del instrumento)\u003c/li\u003e\n\u003cli\u003eErrores experimentales(eztraccion de datos o errores de planificacion)\u003c/li\u003e\n\u003cli\u003eIntencional\u003c/li\u003e\n\u003cli\u003eErrores de procesamiento\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1753831322129_747881974",
      "id": "paragraph_1721417832946_1697653468",
      "dateCreated": "2025-07-29 23:22:02.129",
      "status": "READY"
    },
    {
      "text": "%md\n### Metodos\n* Deviacion estanddar \n* Boxplots o tukey\n* DBScan Clustering\n* Isolation Frest\n* Robusto Ramdon ",
      "user": "anonymous",
      "dateUpdated": "2025-07-29 23:22:02.129",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eMetodos\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eDeviacion estanddar\u003c/li\u003e\n\u003cli\u003eBoxplots o tukey\u003c/li\u003e\n\u003cli\u003eDBScan Clustering\u003c/li\u003e\n\u003cli\u003eIsolation Frest\u003c/li\u003e\n\u003cli\u003eRobusto Ramdon\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1753831322129_940146514",
      "id": "paragraph_1721741097322_2088322100",
      "dateCreated": "2025-07-29 23:22:02.129",
      "status": "READY"
    },
    {
      "text": "%md\n### Formulas\noutlier_{limiteInferior} \u003d mean - 3 * stddev\noutlier_{limiteSuperior} \u003d mean + 3 * stddev",
      "user": "anonymous",
      "dateUpdated": "2025-07-29 23:22:02.129",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eFormulas\u003c/h3\u003e\n\u003cp\u003eoutlier_{limiteInferior} \u003d mean - 3 * stddev\u003cbr /\u003e\noutlier_{limiteSuperior} \u003d mean + 3 * stddev\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1753831322129_1339132457",
      "id": "paragraph_1721741167305_1021258246",
      "dateCreated": "2025-07-29 23:22:02.129",
      "status": "READY"
    },
    {
      "text": "%md\n### Calculamos la media\nLo hacemos con **mean**",
      "user": "anonymous",
      "dateUpdated": "2025-07-29 23:22:02.129",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eCalculamos la media\u003c/h3\u003e\n\u003cp\u003eLo hacemos con \u003cstrong\u003emean\u003c/strong\u003e\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1753831322129_1742027980",
      "id": "paragraph_1721741356488_762263462",
      "dateCreated": "2025-07-29 23:22:02.129",
      "status": "READY"
    },
    {
      "text": "%md\n### Calculamos la Desviacion Estandar\nLo hacemos con **stddev**\n",
      "user": "anonymous",
      "dateUpdated": "2025-07-29 23:22:02.129",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eCalculamos la Desviacion Estandar\u003c/h3\u003e\n\u003cp\u003eLo hacemos con \u003cstrong\u003estddev\u003c/strong\u003e\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1753831322129_265754083",
      "id": "paragraph_1721741348491_1816875969",
      "dateCreated": "2025-07-29 23:22:02.129",
      "status": "READY"
    },
    {
      "text": "%md\n",
      "user": "anonymous",
      "dateUpdated": "2025-07-29 23:22:02.129",
      "progress": 0,
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1753831322129_761434891",
      "id": "paragraph_1721741565027_2111814730",
      "dateCreated": "2025-07-29 23:22:02.129",
      "status": "READY"
    }
  ],
  "name": "Semana16",
  "id": "2M32JYX69",
  "defaultInterpreterGroup": "spark",
  "version": "0.12.0",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}